<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Pocket Computer</title>
    <link>http://localhost:1313/calculators/</link>
    <description>Recent content on My Pocket Computer</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/calculators/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hex to RGBA Calculator</title>
      <link>http://localhost:1313/calculators/calculators/hex-to-rgba/</link>
      <pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/calculators/calculators/hex-to-rgba/</guid>
      <description>&lt;p&gt;Convert a hex color to RGBA or RGBA to hex below:&lt;/p&gt;&#xA;&lt;form id=&#34;color-form&#34;&gt;&#xA;  &lt;label for=&#34;hex&#34;&gt;Hex:&lt;/label&gt;&#xA;  &lt;input type=&#34;text&#34; id=&#34;hex&#34; required&gt;&#xA;  &lt;label for=&#34;rgba&#34;&gt;RGBA:&lt;/label&gt;&#xA;  &lt;input type=&#34;text&#34; id=&#34;rgba&#34; required&gt;&#xA;&lt;/form&gt;&#xA;&lt;div id=&#34;color-preview&#34; style=&#34;width: 50px; height: 50px; border: 1px solid #000;&#34;&gt;&lt;/div&gt;&#xA;&lt;p id=&#34;color-result&#34;&gt;&lt;/p&gt;&#xA;&lt;script&gt;&#xA;function hexToRgba(hex) {&#xA;  // Remove the leading &#39;#&#39; if present&#xA;  hex = hex.replace(/^#/, &#39;&#39;);&#xA;&#xA;  // Parse the r, g, b, and a values&#xA;  let r, g, b, a = 1;&#xA;&#xA;  if (hex.length === 3) {&#xA;    // Handle shorthand hex notation (e.g., #abc)&#xA;    r = parseInt(hex[0] + hex[0], 16);&#xA;    g = parseInt(hex[1] + hex[1], 16);&#xA;    b = parseInt(hex[2] + hex[2], 16);&#xA;  } else if (hex.length === 6) {&#xA;    // Handle standard hex notation (e.g., #aabbcc)&#xA;    r = parseInt(hex.substring(0, 2), 16);&#xA;    g = parseInt(hex.substring(2, 4), 16);&#xA;    b = parseInt(hex.substring(4, 6), 16);&#xA;  } else if (hex.length === 8) {&#xA;    // Handle hex notation with alpha (e.g., #aabbccdd)&#xA;    r = parseInt(hex.substring(0, 2), 16);&#xA;    g = parseInt(hex.substring(2, 4), 16);&#xA;    b = parseInt(hex.substring(4, 6), 16);&#xA;    a = parseInt(hex.substring(6, 8), 16) / 255;&#xA;  } else {&#xA;    throw new Error(&#39;Invalid hex color format&#39;);&#xA;  }&#xA;&#xA;  return `rgba(${r}, ${g}, ${b}, ${a})`;&#xA;}&#xA;&#xA;function rgbaToHex(rgba) {&#xA;  const parts = rgba.match(/rgba?\((\d+),\s*(\d+),\s*(\d+),?\s*(\d*\.?\d+)?\)/);&#xA;  if (!parts) {&#xA;    throw new Error(&#39;Invalid RGBA color format&#39;);&#xA;  }&#xA;&#xA;  const r = parseInt(parts[1]).toString(16).padStart(2, &#39;0&#39;);&#xA;  const g = parseInt(parts[2]).toString(16).padStart(2, &#39;0&#39;);&#xA;  const b = parseInt(parts[3]).toString(16).padStart(2, &#39;0&#39;);&#xA;  const a = parts[4] ? Math.round(parseFloat(parts[4]) * 255).toString(16).padStart(2, &#39;0&#39;) : &#39;&#39;;&#xA;&#xA;  return `#${r}${g}${b}${a}`;&#xA;}&#xA;&#xA;function updateColorPreview(color) {&#xA;  document.getElementById(&#39;color-preview&#39;).style.backgroundColor = color;&#xA;}&#xA;&#xA;document.getElementById(&#39;hex&#39;).addEventListener(&#39;input&#39;, function() {&#xA;  const hex = document.getElementById(&#39;hex&#39;).value;&#xA;  try {&#xA;    const rgba = hexToRgba(hex);&#xA;    document.getElementById(&#39;rgba&#39;).value = rgba;&#xA;    updateColorPreview(rgba);&#xA;  } catch (error) {&#xA;    document.getElementById(&#39;rgba&#39;).value = &#39;Invalid hex color format&#39;;&#xA;    updateColorPreview(&#39;transparent&#39;);&#xA;  }&#xA;});&#xA;&#xA;document.getElementById(&#39;rgba&#39;).addEventListener(&#39;input&#39;, function() {&#xA;  const rgba = document.getElementById(&#39;rgba&#39;).value;&#xA;  try {&#xA;    const hex = rgbaToHex(rgba);&#xA;    document.getElementById(&#39;hex&#39;).value = hex;&#xA;    updateColorPreview(rgba);&#xA;  } catch (error) {&#xA;    document.getElementById(&#39;hex&#39;).value = &#39;Invalid RGBA color format&#39;;&#xA;    updateColorPreview(&#39;transparent&#39;);&#xA;  }&#xA;});&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Temperature Conversions</title>
      <link>http://localhost:1313/calculators/calculators/temperature-conversion/</link>
      <pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/calculators/calculators/temperature-conversion/</guid>
      <description>&lt;p&gt;If you know a temperature in celsius, farenheit, or kelvin, show what the other values would be.&lt;/p&gt;&#xA;&lt;form id=&#34;bmi-form&#34;&gt;&#xA;  &lt;label for=&#34;celsius&#34;&gt;Celsius:&lt;/label&gt;&#xA;  &lt;input type=&#34;number&#34; id=&#34;celsius&#34; required&gt;&#xA;  &lt;label for=&#34;farenheit&#34;&gt;Farenheit:&lt;/label&gt;&#xA;  &lt;input type=&#34;number&#34; id=&#34;farenheit&#34; required&gt;&#xA;  &lt;label for=&#34;kelvin&#34;&gt;Kelvin:&lt;/label&gt;&#xA;  &lt;input type=&#34;number&#34; id=&#34;kelvin&#34; required&gt;&#xA;&lt;/form&gt;&#xA;&lt;script&gt;&#xA;  const celsius = document.getElementById(&#39;celsius&#39;);&#xA;  const farenheit = document.getElementById(&#39;farenheit&#39;);&#xA;  const kelvin = document.getElementById(&#39;kelvin&#39;);&#xA;  celsius.addEventListener(&#39;input&#39;, function(){&#xA;    const celsiusValue = parseFloat(celsius.value);&#xA;    farenheit.value = ((celsiusValue * 9/5) + 32).toFixed(2);&#xA;    kelvin.value = (celsiusValue + 273.15).toFixed(2);&#xA;  });&#xA;  farenheit.addEventListener(&#39;input&#39;, function(){&#xA;    const farenheitValue = parseFloat(farenheit.value);&#xA;    celsius.value = ((farenheitValue - 32) * 5/9).toFixed(2);&#xA;    kelvin.value = (((farenheitValue - 32) * 5/9) + 273.15).toFixed(2);&#xA;  });&#xA;  kelvin.addEventListener(&#39;input&#39;, function(){&#xA;    const kelvinValue = parseFloat(kelvin.value);&#xA;    celsius.value = (kelvinValue - 273.15).toFixed(2);&#xA;    farenheit.value = ((celsius.value * 9/5) + 32).toFixed(2);&#xA;  });&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>BMI Calculator</title>
      <link>http://localhost:1313/calculators/calculators/bmi-calculator/</link>
      <pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/calculators/calculators/bmi-calculator/</guid>
      <description>&lt;p&gt;Calculate your Body Mass Index (BMI) below:&lt;/p&gt;&#xA;&lt;form id=&#34;bmi-form&#34;&gt;&#xA;  &lt;label for=&#34;weight&#34;&gt;Weight (kg):&lt;/label&gt;&#xA;  &lt;input type=&#34;number&#34; id=&#34;weight&#34; required&gt;&#xA;  &lt;label for=&#34;height&#34;&gt;Height (m):&lt;/label&gt;&#xA;  &lt;input type=&#34;number&#34; id=&#34;height&#34; required&gt;&#xA;  &lt;button type=&#34;button&#34; onclick=&#34;calculateBMI()&#34;&gt;Calculate&lt;/button&gt;&#xA;&lt;/form&gt;&#xA;&lt;p id=&#34;bmi-result&#34;&gt;&lt;/p&gt;&#xA;&lt;script&gt;&#xA;  function calculateBMI() {&#xA;    var weight = document.getElementById(&#39;weight&#39;).value;&#xA;    var height = document.getElementById(&#39;height&#39;).value;&#xA;    if (weight &amp;&amp; height) {&#xA;      var bmi = weight / (height * height);&#xA;      document.getElementById(&#39;bmi-result&#39;).innerText = &#34;Your BMI is &#34; + bmi.toFixed(2);&#xA;    }&#xA;  }&#xA;&lt;/script&gt;</description>
    </item>
  </channel>
</rss>
